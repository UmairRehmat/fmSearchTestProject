///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
const String jsonKeyAlbumResponseResults = "results";
const String jsonKeyAlbumResponseResultsOpensearchQuery = "opensearch:Query";
const String jsonKeyAlbumResponseResultsOpensearchtotalResults =
    "opensearch:totalResults";
const String jsonKeyAlbumResponseResultsOpensearchstartIndex =
    "opensearch:startIndex";
const String jsonKeyAlbumResponseResultsOpensearchitemsPerPage =
    "opensearch:itemsPerPage";
const String jsonKeyAlbumResponseResultsAlbummatches = "albummatches";
const String jsonKeyAlbumResponseResultsAttr = "#attr";
const String jsonKeyAlbumResponseResultsAttrTheFor = "for";

class AlbumResponseResultsAttr {
/*
{
  "for": "believe"
}
*/

  String? theFor;
  Map<String, dynamic> __origJson = {};

  AlbumResponseResultsAttr({
    this.theFor,
  });
  AlbumResponseResultsAttr.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    theFor = json[jsonKeyAlbumResponseResultsAttrTheFor]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data[jsonKeyAlbumResponseResultsAttrTheFor] = theFor;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

const String jsonKeyAlbumResponseResultsAlbummatchesAlbum = "album";
const String jsonKeyAlbumResponseResultsAlbummatchesAlbumName = "name";
const String jsonKeyAlbumResponseResultsAlbummatchesAlbumArtist = "artist";
const String jsonKeyAlbumResponseResultsAlbummatchesAlbumUrl = "url";
const String jsonKeyAlbumResponseResultsAlbummatchesAlbumImage = "image";
const String jsonKeyAlbumResponseResultsAlbummatchesAlbumStreamable =
    "streamable";
const String jsonKeyAlbumResponseResultsAlbummatchesAlbumMbid = "mbid";
const String jsonKeyAlbumResponseResultsAlbummatchesAlbumImagetext = "#text";
const String jsonKeyAlbumResponseResultsAlbummatchesAlbumImageSize = "size";

class AlbumResponseResultsAlbummatchesAlbumImage {
/*
{
  "#text": "https://lastfm.freetls.fastly.net/i/u/34s/dcf5cf4b9da64e979719a102acd222cc.png",
  "size": "small"
}
*/

  String? text;
  String? size;
  Map<String, dynamic> __origJson = {};

  AlbumResponseResultsAlbummatchesAlbumImage({
    this.text,
    this.size,
  });
  AlbumResponseResultsAlbummatchesAlbumImage.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    text =
        json[jsonKeyAlbumResponseResultsAlbummatchesAlbumImagetext]?.toString();
    size =
        json[jsonKeyAlbumResponseResultsAlbummatchesAlbumImageSize]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data[jsonKeyAlbumResponseResultsAlbummatchesAlbumImagetext] = text;
    data[jsonKeyAlbumResponseResultsAlbummatchesAlbumImageSize] = size;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class Album {
/*
{
  "name": "Believe",
  "artist": "Disturbed",
  "url": "https://www.last.fm/music/Disturbed/Believe",
  "image": [
    {
      "#text": "https://lastfm.freetls.fastly.net/i/u/34s/dcf5cf4b9da64e979719a102acd222cc.png",
      "size": "small"
    }
  ],
  "streamable": "0",
  "mbid": "c559efc2-f734-41ae-93bd-2d78414e0356"
}
*/

  String? name;
  String? artist;
  String? url;
  List<AlbumResponseResultsAlbummatchesAlbumImage?>? image;
  String? streamable;
  String? mbid;
  Map<String, dynamic> __origJson = {};

  Album({
    this.name,
    this.artist,
    this.url,
    this.image,
    this.streamable,
    this.mbid,
  });
  Album.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    name = json[jsonKeyAlbumResponseResultsAlbummatchesAlbumName]?.toString();
    artist =
        json[jsonKeyAlbumResponseResultsAlbummatchesAlbumArtist]?.toString();
    url = json[jsonKeyAlbumResponseResultsAlbummatchesAlbumUrl]?.toString();
    if (json[jsonKeyAlbumResponseResultsAlbummatchesAlbumImage] != null) {
      final v = json[jsonKeyAlbumResponseResultsAlbummatchesAlbumImage];
      final arr0 = <AlbumResponseResultsAlbummatchesAlbumImage>[];
      v.forEach((v) {
        arr0.add(AlbumResponseResultsAlbummatchesAlbumImage.fromJson(v));
      });
      image = arr0;
    }
    streamable = json[jsonKeyAlbumResponseResultsAlbummatchesAlbumStreamable]
        ?.toString();
    mbid = json[jsonKeyAlbumResponseResultsAlbummatchesAlbumMbid]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data[jsonKeyAlbumResponseResultsAlbummatchesAlbumName] = name;
    data[jsonKeyAlbumResponseResultsAlbummatchesAlbumArtist] = artist;
    data[jsonKeyAlbumResponseResultsAlbummatchesAlbumUrl] = url;
    if (image != null) {
      final v = image;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data[jsonKeyAlbumResponseResultsAlbummatchesAlbumImage] = arr0;
    }
    data[jsonKeyAlbumResponseResultsAlbummatchesAlbumStreamable] = streamable;
    data[jsonKeyAlbumResponseResultsAlbummatchesAlbumMbid] = mbid;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class AlbumMatched {
/*
{
  "album": [
    {
      "name": "Believe",
      "artist": "Disturbed",
      "url": "https://www.last.fm/music/Disturbed/Believe",
      "image": [
        {
          "#text": "https://lastfm.freetls.fastly.net/i/u/34s/dcf5cf4b9da64e979719a102acd222cc.png",
          "size": "small"
        }
      ],
      "streamable": "0",
      "mbid": "c559efc2-f734-41ae-93bd-2d78414e0356"
    }
  ]
}
*/

  List<Album?>? album;
  Map<String, dynamic> __origJson = {};

  AlbumMatched({
    this.album,
  });
  AlbumMatched.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    if (json[jsonKeyAlbumResponseResultsAlbummatchesAlbum] != null) {
      final v = json[jsonKeyAlbumResponseResultsAlbummatchesAlbum];
      final arr0 = <Album>[];
      v.forEach((v) {
        arr0.add(Album.fromJson(v));
      });
      album = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (album != null) {
      final v = album;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data[jsonKeyAlbumResponseResultsAlbummatchesAlbum] = arr0;
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

const String jsonKeyAlbumResponseResultsOpensearchQuerytext = "text";
const String jsonKeyAlbumResponseResultsOpensearchQueryRole = "role";
const String jsonKeyAlbumResponseResultsOpensearchQuerySearchTerms =
    "searchTerms";
const String jsonKeyAlbumResponseResultsOpensearchQueryStartPage = "startPage";

class AlbumResponseResultsOpensearchQuery {
/*
{
  "#text": "",
  "role": "request",
  "searchTerms": "believe",
  "startPage": "1"
}
*/

  String? text;
  String? role;
  String? searchTerms;
  String? startPage;
  Map<String, dynamic> __origJson = {};

  AlbumResponseResultsOpensearchQuery({
    this.text,
    this.role,
    this.searchTerms,
    this.startPage,
  });
  AlbumResponseResultsOpensearchQuery.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    text = json[jsonKeyAlbumResponseResultsOpensearchQuerytext]?.toString();
    role = json[jsonKeyAlbumResponseResultsOpensearchQueryRole]?.toString();
    searchTerms =
        json[jsonKeyAlbumResponseResultsOpensearchQuerySearchTerms]?.toString();
    startPage =
        json[jsonKeyAlbumResponseResultsOpensearchQueryStartPage]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data[jsonKeyAlbumResponseResultsOpensearchQuerytext] = text;
    data[jsonKeyAlbumResponseResultsOpensearchQueryRole] = role;
    data[jsonKeyAlbumResponseResultsOpensearchQuerySearchTerms] = searchTerms;
    data[jsonKeyAlbumResponseResultsOpensearchQueryStartPage] = startPage;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class AlbumResponseResults {
/*
{
  "opensearchQuery": {
    "#text": "",
    "role": "request",
    "searchTerms": "believe",
    "startPage": "1"
  },
  "opensearchtotalResults": "138744",
  "opensearchstartIndex": "0",
  "opensearchitemsPerPage": "50",
  "albummatches": {
    "album": [
      {
        "name": "Believe",
        "artist": "Disturbed",
        "url": "https://www.last.fm/music/Disturbed/Believe",
        "image": [
          {
            "#text": "https://lastfm.freetls.fastly.net/i/u/34s/dcf5cf4b9da64e979719a102acd222cc.png",
            "size": "small"
          }
        ],
        "streamable": "0",
        "mbid": "c559efc2-f734-41ae-93bd-2d78414e0356"
      }
    ]
  },
  "attr": {
    "for": "believe"
  }
}
*/

  AlbumResponseResultsOpensearchQuery? opensearchQuery;
  String? opensearchtotalResults;
  String? opensearchstartIndex;
  String? opensearchitemsPerPage;
  AlbumMatched? albummatches;
  AlbumResponseResultsAttr? attr;
  Map<String, dynamic> __origJson = {};

  AlbumResponseResults({
    this.opensearchQuery,
    this.opensearchtotalResults,
    this.opensearchstartIndex,
    this.opensearchitemsPerPage,
    this.albummatches,
    this.attr,
  });
  AlbumResponseResults.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    opensearchQuery = (json[jsonKeyAlbumResponseResultsOpensearchQuery] != null)
        ? AlbumResponseResultsOpensearchQuery.fromJson(
            json[jsonKeyAlbumResponseResultsOpensearchQuery])
        : null;
    opensearchtotalResults =
        json[jsonKeyAlbumResponseResultsOpensearchtotalResults]?.toString();
    opensearchstartIndex =
        json[jsonKeyAlbumResponseResultsOpensearchstartIndex]?.toString();
    opensearchitemsPerPage =
        json[jsonKeyAlbumResponseResultsOpensearchitemsPerPage]?.toString();
    albummatches = (json[jsonKeyAlbumResponseResultsAlbummatches] != null)
        ? AlbumMatched.fromJson(json[jsonKeyAlbumResponseResultsAlbummatches])
        : null;
    attr = (json[jsonKeyAlbumResponseResultsAttr] != null)
        ? AlbumResponseResultsAttr.fromJson(
            json[jsonKeyAlbumResponseResultsAttr])
        : null;
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (opensearchQuery != null) {
      data[jsonKeyAlbumResponseResultsOpensearchQuery] =
          opensearchQuery!.toJson();
    }
    data[jsonKeyAlbumResponseResultsOpensearchtotalResults] =
        opensearchtotalResults;
    data[jsonKeyAlbumResponseResultsOpensearchstartIndex] =
        opensearchstartIndex;
    data[jsonKeyAlbumResponseResultsOpensearchitemsPerPage] =
        opensearchitemsPerPage;
    if (albummatches != null) {
      data[jsonKeyAlbumResponseResultsAlbummatches] = albummatches!.toJson();
    }
    if (attr != null) {
      data[jsonKeyAlbumResponseResultsAttr] = attr!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class AlbumResponse {
/*
{
  "results": {
    "opensearchQuery": {
      "#text": "",
      "role": "request",
      "searchTerms": "believe",
      "startPage": "1"
    },
    "opensearchtotalResults": "138744",
    "opensearchstartIndex": "0",
    "opensearchitemsPerPage": "50",
    "albummatches": {
      "album": [
        {
          "name": "Believe",
          "artist": "Disturbed",
          "url": "https://www.last.fm/music/Disturbed/Believe",
          "image": [
            {
              "#text": "https://lastfm.freetls.fastly.net/i/u/34s/dcf5cf4b9da64e979719a102acd222cc.png",
              "size": "small"
            }
          ],
          "streamable": "0",
          "mbid": "c559efc2-f734-41ae-93bd-2d78414e0356"
        }
      ]
    },
    "attr": {
      "for": "believe"
    }
  }
}
*/

  AlbumResponseResults? results;
  Map<String, dynamic> __origJson = {};

  AlbumResponse({
    this.results,
  });
  AlbumResponse.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    results = (json[jsonKeyAlbumResponseResults] != null)
        ? AlbumResponseResults.fromJson(json[jsonKeyAlbumResponseResults])
        : null;
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (results != null) {
      data[jsonKeyAlbumResponseResults] = results!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}
